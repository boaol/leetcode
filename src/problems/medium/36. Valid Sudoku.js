/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
  const boxes = [
    [...board[0].slice(0, 3), ...board[1].slice(0, 3), ...board[2].slice(0, 3)],
    [...board[0].slice(3, 6), ...board[1].slice(3, 6), ...board[2].slice(3, 6)],
    [...board[0].slice(6, 9), ...board[1].slice(6, 9), ...board[2].slice(6, 9)],
    [...board[3].slice(0, 3), ...board[4].slice(0, 3), ...board[5].slice(0, 3)],
    [...board[3].slice(3, 6), ...board[4].slice(3, 6), ...board[5].slice(3, 6)],
    [...board[3].slice(6, 9), ...board[4].slice(6, 9), ...board[5].slice(6, 9)],
    [...board[6].slice(0, 3), ...board[7].slice(0, 3), ...board[8].slice(0, 3)],
    [...board[6].slice(3, 6), ...board[7].slice(3, 6), ...board[8].slice(3, 6)],
    [...board[6].slice(6, 9), ...board[7].slice(6, 9), ...board[8].slice(6, 9)],
  ]

  const columns = board.reduce(
    (state, current) => {
      current.forEach((element, index) => {
        state[index].push(element)
      })
      return state
    },
    [[], [], [], [], [], [], [], [], []]
  )

  console.log({ columns })

  const valid = (array) => {
    return (
      new Set(array.filter((_) => _ !== ".")).size ===
      array.filter((_) => _ !== ".").length
    )
  }

  return (
    boxes.filter(valid).length === 9 &&
    board.filter(valid).length === 9 &&
    columns.filter(valid).length === 9
  )
}

// console.log(
//   isValidSudoku([
//     ["8", "3", ".", ".", "7", ".", ".", ".", "."],
//     ["6", ".", ".", "1", "9", "5", ".", ".", "."],
//     [".", "9", "8", ".", ".", ".", ".", "6", "."],
//     ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
//     ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
//     ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
//     [".", "6", ".", ".", ".", ".", "2", "8", "."],
//     [".", ".", ".", "4", "1", "9", ".", ".", "5"],
//     [".", ".", ".", ".", "8", ".", ".", "7", "9"],
//   ])
// )
// console.log(
//   isValidSudoku([
//     ["5", "3", ".", ".", "7", ".", ".", ".", "."],
//     ["6", ".", ".", "1", "9", "5", ".", ".", "."],
//     [".", "9", "8", ".", ".", ".", ".", "6", "."],
//     ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
//     ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
//     ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
//     [".", "6", ".", ".", ".", ".", "2", "8", "."],
//     [".", ".", ".", "4", "1", "9", ".", ".", "5"],
//     [".", ".", ".", ".", "8", ".", ".", "7", "9"],
//   ])
// )

console.log(
  isValidSudoku([
    [".", ".", "4", ".", ".", ".", "6", "3", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["5", ".", ".", ".", ".", ".", ".", "9", "."],
    [".", ".", ".", "5", "6", ".", ".", ".", "."],
    ["4", ".", "3", ".", ".", ".", ".", ".", "1"],
    [".", ".", ".", "7", ".", ".", ".", ".", "."],
    [".", ".", ".", "5", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
  ])
)
